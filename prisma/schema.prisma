// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../server/node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) @db.Char(36)
  username   String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  reviews    Review[]
}

model Book {
  id           String   @id @default(uuid()) @db.Char(36)
  title        String
  author       String
  cover        String?
  genre        String?
  description  String?
  rating       Decimal  @default(0.0) @db.Decimal(2, 1)
  review_count Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  reviews      Review[]

  @@index([rating(sort: Desc)]) // index on reating in descending order
}

model Review {
  id         String   @id @default(uuid()) @db.Char(36)
  rating     Int
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  //realtion
  userId String
  bookId String
  user   User   @relation(fields: [userId], references: [id])
  book   Book   @relation(fields: [bookId], references: [id])

  @@unique([userId, bookId])
  @@index([bookId])
  @@index([userId])
}
